#!/usr/bin/env bash

die() {
	echo "$*" >&2
	exit 1
}

SRC_DIR=$1
echo $SRC_DIR 1>&2
echo $BUILD_ID 1>&2
echo $BUILD_NAME 1>&2
echo $BUILD_JOB_NAME 1>&2
echo $BUILD_PIPELINE_NAME 1>&2

SCRIPT_INPUT='/tmp/input'
cat > $SCRIPT_INPUT <&0 # STDIN params

SERVER=$(jq -r '.source.server // ""' < $SCRIPT_INPUT)
PORT=$(jq -r '.source.port // ""' < $SCRIPT_INPUT)
DEST_DIR=$(jq -r '.source.base_dir // ""' < $SCRIPT_INPUT)
USER=$(jq -r '.source.user // ""' < $SCRIPT_INPUT)
SYNC_DIR=$(jq -r '.params.sync_dir // ""' < $SCRIPT_INPUT)

## check if port is set in the configuration and
## use default SSH port number 22 otherwise
PORT=${PORT:+ -p $PORT}

echo $SCRIPT_INPUT 1>&2
echo $SERVER       1>&2
echo $PORT         1>&2
echo $DEST_DIR     1>&2
echo $USER         1>&2
echo $SYNC_DIR     1>&2

mkdir ~/.ssh
chmod 600 ~/.ssh
(jq -r '.source.private_key // empty' < $SCRIPT_INPUT) > ~/.ssh/server_key
echo -e "Host $SERVER\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
chmod 600 ~/.ssh/*

eval $(ssh-agent) 1>&2 2>/dev/null
SSH_ASKPASS=/opt/resource/askpass.sh DISPLAY= ssh-add ~/.ssh/server_key 1>&2 2>/dev/null

# Create the new directory for this build
ssh -i ~/.ssh/server_key$PORT $USER@$SERVER mkdir -p $DEST_DIR ||
	die "Failed to create destination $DEST_DIR"

rsync -Pav -e 'ssh -i ~/.ssh/server_key$PORT' \
  $SRC_DIR/$SYNC_DIR/* $USER@$SERVER:$DEST_DIR || {
    die "Failed to rsync $SRC_DIR to $DEST_DIR"

printf '{"version": {"ref": "%s"}}' "$BUILD_PIPELINE_NAME/$BUILD_NAME:$BUILD_ID"
